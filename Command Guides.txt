TERMINAL READING AND PRINTING
***
readline			- read a line from standard input
rl_clear_history	- clear terminal rl_clear_history
rl_on_new_line		- tells the terminal we're in a new line
rl_replace_line		- 
rl_redisplay		- "rewrite" the actual line on terminal
add_history			- add a string to the history
printf				- prints a message
malloc				- alocate memmory
free				- free memmory
write				- write a "string"
access				- check if the process has permition to access a file or folder
open | read | close	- open, read and close a file descriptor (respectively)
fork				- creates a child process
wait				- father process wait until process child end
waitpid				- same as wait, but waits a specific child process
wait3				- same as waitpid, but can provide information about use of resourse in the terminated process
wait4				- same as wait3, but different in collect and return mode
signal				- handle signals
sigaction			- handle signals as signal, but more robust and flexible
sigemptyset			- initialize signals
sigaddset			- 
kill				- send signals to process
exit				- finish execution
getcwd				- 
chdir				- 
stat				- 
lstat				- 
fstat				- 
unlink				- 
execve				- 
dup					- 
dup2				- 
pipe				- 
opendir				- 
readdir				- 
closedir			- 
strerror			- 
perror				- 
isatty				- 
ttyname				- 
ttyslot				- 
ioctl				- 
getenv				- 
tcsetattr			- 
tcgetattr			- 
tgetent				- 
tgetflag			- 
tgetnum				- 
tgetstr				- 
tgoto				- 
tputs				- 